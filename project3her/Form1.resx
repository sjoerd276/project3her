<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALkAAAC5CAMAAABDc25uAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMAUExURQpGgevv9QxIgvf5+/v8/RZPh/7+/v///w5Jg/39/gxHgg9KhBJMhQtHgvr7/Pn6/EFw
        nR9WjP3+/hlSiRdQiPT3+iNZjh1VixRNhhhRiA1Igv7+/ylekbvL3CRajxFLhDtrmujt8+nu8wtHgfD0
        98HQ3u3x9tfh6htTinWXuBBLhBROhuLp8BBKhKW70FB7pViBqd/n70h1obzN3e3x9dbg6ihdkebs8qe8
        0k56pBNNhtrj7C5hkw1IgzFjlfb5+i9ilDdomP7//yhdkPr7/dni6/z9/vX3+vL1+cnW43CTto+qxezw
        9Zewyvj5+2OJr+/z91qCqg1Jg3SWt93m7niZuubs8nmauuLp8BFLhcvX5GSKr16GrOrv9LHE16i90hJN
        hYunwyxgk1eAqd/m7kJxnjZnmJKtx/z9/VF7pbjK2/j6+z5tnIilwt3l7fX4+j9unDVnl/j6/AtGgRlR
        idXf6eTr8RVPh4akwfP2+Up2onubu5uzzJixymCHrbfI2luDq6/C1tLd6MDP3kBvnXOVtyFXjenu9GaL
        sBxUimiNsV6FrDNlln6evfn7/FJ8pjhpme3y9n+evVR9p3eYucjV4/H1+EVynyZckOft8m6RtGGIrrLF
        2Km+087a5hFMhazA1GqOs8TS4eTq8bnL283Z5eHo73KUtrXH2cfU4n2dvJSuyNHc5z1sm0x4o8jV4vz8
        /SVbj8HQ34Ggvtvk7bjJ2jpqmkd0oICfvuXr8pCsxuDn78/b5kRyn+7y9sfV4jRml6q/0562zbTH2VN9
        plZ/qMvY5KzB1IyoxJ+3zqG4zmeMsbDE1oOhv77O3b/O3hVOh8XT4YmmwkVzoKS60OPq8CFYjW+StWuQ
        s9jh6zJklvDz9zxrm5WvyaG4z1yEq8rX48HR34WjwI2pxZu0zJmyytzk7ff5+4Khv521zK7C1d3m7tPe
        6Ovw9CpekoOiwFeBqU15o2mNsjRmlpawyVJ9pkt3o6a70cDP31mCqsPS4GyQtPT3+ai90/r8/YuoxDmK
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>