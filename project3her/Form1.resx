<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALkAAAC5CAMAAABDc25uAAAABGdBTUEAALGPC/xhBQAAAwBQTFRFCkaB
        6+/1DEiC9/n7+/z9Fk+H/v7+////DkmD/f3+DEeCD0qEEkyFC0eC+vv8+fr8QXCdH1aM/f7+GVKJF1CI
        9Pf6I1mOHVWLFE2GGFGIDUiC/v7/KV6Ru8vcJFqPEUuEO2ua6O3z6e7zC0eB8PT3wdDe7fH21+HqG1OK
        dZe4EEuEFE6G4unwEEqEpbvQUHulWIGp3+fvSHWhvM3d7fH11uDqKF2R5uzyp7zSTnqkE02G2uPsLmGT
        DUiDMWOV9vn6L2KUN2iY/v//KF2Q+vv92eLr/P3+9ff68vX5ydbjcJO2j6rF7PD1l7DK+Pn7Y4mv7/P3
        WoKqDUmDdJa33ebueJm65uzyeZq64unwEUuFy9fkZIqvXoas6u/0scTXqL3SEk2Fi6fDLGCTV4Cp3+bu
        QnGeNmeYkq3H/P39UXuluMrb+Pr7Pm2ciKXC3eXt9fj6P26cNWeX+Pr8C0aBGVGJ1d/p5OvxFU+HhqTB
        8/b5Snaie5u7m7PMmLHKYIett8jaW4Orr8LW0t3owM/eQG+dc5W3IVeN6e70ZouwHFSKaI2xXoWsM2WW
        fp69+fv8UnymOGmZ7fL2f569VH2nd5i5yNXj8fX4RXKfJlyQ5+3ybpG0YYiussXYqb7TztrmEUyFrMDU
        ao6zxNLh5Orxucvbzdnl4ejvcpS2tcfZx9TifZ28lK7I0dznPWybTHijyNXi/Pz9JVuPwdDfgaC+2+Tt
        uMnaOmqaR3SggJ++5evykKzG4Ofvz9vmRHKf7vL2x9XiNGaXqr/TnrbNtMfZU32mVn+oy9jkrMHUjKjE
        n7fOobjOZ4yxsMTWg6G/vs7dv87eFU6HxdPhiabCRXOgpLrQ4+rwIViNb5K1a5Cz2OHrMmSW8PP3PGub
        la/JobjPXISrytfjwdHfhaPAjanFm7TMmbLK3OTt9/n7gqG/nbXMrsLV3ebu097o6/D0Kl6Sg6LAV4Gp
        TXmjaY2yNGaWlrDJUn2mS3ejprvRwM/fWYKqw9LgbJC09Pf5qL3T+vz9i6jEOYq/6AAAAAlwSFlzAAAL
        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
</value>
  </data>
</root>